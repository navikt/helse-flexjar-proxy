name: Bygg og Deploy

on:
  push:

jobs:
  build-and-publish:
    permissions:
      contents: "read"
      id-token: "write"
    name: Bygg og publiser
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    env:
      ORG_GRADLE_PROJECT_githubUser: x-access-token
      ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
    steps:

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Checkout code
        uses: actions/checkout@v4
      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1

      - uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-cache-

      - uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-

      - name: Build jar
        run: ./gradlew build -x test

      - name: docker-build-push
        if: github.ref_name == 'main'
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: tbd
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy-to-dev:
    if: github.ref_name == 'docker-build-push'
    needs: [build-and-publish]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yml
          VARS: nais/dev.yml
          IMAGE: ${{ needs.build-and-publish.outputs.image }}

  deploy-to-prod:
    if: false
    needs: [build-and-publish]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/nais.yml
          VARS: nais/prod.yml
          IMAGE: ${{ needs.build-and-publish.outputs.image }}